name: Deploy WordPress via Bastion

on:
  push:
    branches: [ main ]  # main 브랜치에 푸시되면 실행

jobs:
  deploy:
    runs-on: ubuntu-latest  # GitHub 제공 가상환경

    env:  # GitHub Secrets → 환경변수로 전달
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_ROOT_PASSWORD: ${{ secrets.DB_ROOT_PASSWORD }}
      BASTION_HOST: ${{ secrets.BASTION_HOST }}
      TARGET_HOST: ${{ secrets.TARGET_HOST }}

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3  # 레포지토리 코드 가져오기

    - name: Set up SSH Agent
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}  # GitHub에 등록된 .pem 키 내용

    - name: Deploy to EC2 via Bastion
      run: |
        ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null \
            -J ec2-user@$BASTION_HOST \
            ec2-user@$TARGET_HOST << EOF

          cd /home/ec2-user/wordpress-repo  # 워드프레스 코드 디렉토리

          git pull origin main  # 최신 코드 가져오기

          # .env 파일 생성
          cat <<EOT > .env
          DB_NAME=$DB_NAME
          DB_USER=$DB_USER
          DB_PASSWORD=$DB_PASSWORD
          DB_ROOT_PASSWORD=$DB_ROOT_PASSWORD
          EOT

          docker-compose down      # 기존 컨테이너 정리
          docker-compose up -d --build  # 새로 빌드 및 실행
        EOF

